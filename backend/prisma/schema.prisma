generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  name     String

  @@map("users")
}

model Product {
  id                  Int                   @id @default(autoincrement())
  code                String
  ean                 String?
  description         String?
  importerId          String                @map("importer_id")
  createdAt           DateTime              @default(now()) @map("created_at")
  updatedAt           DateTime              @updatedAt @map("updated_at")
  importer            importer              @relation(fields: [importerId], references: [id])
  productsOnContainer ProductsOnContainer[] 

  @@index([importerId], map: "products_importer_id_fkey")
  @@map("products")
}

model Container {
  id                  String                @id @unique
  createdAt           DateTime              @default(now()) @map("created_at")
  updatedAt           DateTime              @updatedAt @map("updated_at")
  productsOnContainer ProductsOnContainer[]

  @@map("containers")
}

model importer {
  id       String    @id @unique(map: "Importer_id_key")
  products Product[]
}

model ProductsOnContainer {
  id               Int       @id @default(autoincrement())
  containerId      String    @map("container_id")
  productId        Int       @map("product_id")
  quantityExpected Int
  quantityReceived Int
  containers       Container @relation(fields: [containerId], references: [id], map: "ProductsOnContainer_container_id_fkey")
  products         Product   @relation(fields: [productId], references: [id], map: "ProductsOnContainer_product_id_fkey")
  observation     String?
  createdAt        DateTime  @default(now()) @map("created_at")

  @@index([containerId], map: "ProductsOnContainer_container_id_fkey")
  @@index([productId], map: "ProductsOnContainer_product_id_fkey")
  @@map("products_on_container")
}
