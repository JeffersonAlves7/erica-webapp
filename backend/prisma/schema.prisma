generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  name     String
	@@map("users")
}

model Product {
  id Int @id @default(autoincrement())
  code String 
  ean String? 
  description String?

  importer Importer @relation(fields: [importerId], references: [id])
  importerId String @map("importer_id")

  shipments Shipment[]
  productsOnStock ProductsOnStock[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
	@@map("products")
}

model Shipment {
  id Int @id @default(autoincrement())

  product Product @relation(fields: [productId], references: [id])
  productId Int @map("product_id")

  container Container @relation(fields: [containerId], references: [id])
  containerId String @map("container_id")

  status ShipmentStatus

  amountExpected Int @map("amount_expected")
  amountReceived Int @map("amount_received")

  createdAt DateTime @default(now()) @map("created_at")
  departureDate DateTime @map("departure_date")
  updatedAt DateTime @updatedAt @map("updated_at")

	@@map("shipments")
}

model Stock {
  id Int @id @default(autoincrement())
  productId String @map("product_id")
  quantity Int
  stockProducts ProductsOnStock[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model ProductsOnStock {
  id Int @id @default(autoincrement())
  stock Stock @relation(fields: [stockId], references: [id])
  stockId Int @map("stock_id")
  product Product @relation(fields: [productId], references: [id])
  productId Int @map("product_id")
  quantity Int
}

enum ShipmentStatus {
  IN_TRANSIT
  ARRIVED
}

model Container {
  id String @id @unique
  name String
  shipments Shipment[]
	@@map("containers")
}

model Importer {
  id String @id @unique
  products Product[]
}